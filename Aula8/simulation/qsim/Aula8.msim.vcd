$comment
	File created using the following command:
		vcd file Aula8.msim.vcd -direction
$end
$date
	Wed Oct  6 18:42:24 2021
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module aula8_vhd_vec_tst $end
$var wire 1 ! Address [8] $end
$var wire 1 " Address [7] $end
$var wire 1 # Address [6] $end
$var wire 1 $ Address [5] $end
$var wire 1 % Address [4] $end
$var wire 1 & Address [3] $end
$var wire 1 ' Address [2] $end
$var wire 1 ( Address [1] $end
$var wire 1 ) Address [0] $end
$var wire 1 * CLOCK_50 $end
$var wire 1 + FPGA_RST $end
$var wire 1 , HEX0 [6] $end
$var wire 1 - HEX0 [5] $end
$var wire 1 . HEX0 [4] $end
$var wire 1 / HEX0 [3] $end
$var wire 1 0 HEX0 [2] $end
$var wire 1 1 HEX0 [1] $end
$var wire 1 2 HEX0 [0] $end
$var wire 1 3 HEX1 [6] $end
$var wire 1 4 HEX1 [5] $end
$var wire 1 5 HEX1 [4] $end
$var wire 1 6 HEX1 [3] $end
$var wire 1 7 HEX1 [2] $end
$var wire 1 8 HEX1 [1] $end
$var wire 1 9 HEX1 [0] $end
$var wire 1 : HEX2 [6] $end
$var wire 1 ; HEX2 [5] $end
$var wire 1 < HEX2 [4] $end
$var wire 1 = HEX2 [3] $end
$var wire 1 > HEX2 [2] $end
$var wire 1 ? HEX2 [1] $end
$var wire 1 @ HEX2 [0] $end
$var wire 1 A HEX3 [6] $end
$var wire 1 B HEX3 [5] $end
$var wire 1 C HEX3 [4] $end
$var wire 1 D HEX3 [3] $end
$var wire 1 E HEX3 [2] $end
$var wire 1 F HEX3 [1] $end
$var wire 1 G HEX3 [0] $end
$var wire 1 H HEX4 [6] $end
$var wire 1 I HEX4 [5] $end
$var wire 1 J HEX4 [4] $end
$var wire 1 K HEX4 [3] $end
$var wire 1 L HEX4 [2] $end
$var wire 1 M HEX4 [1] $end
$var wire 1 N HEX4 [0] $end
$var wire 1 O HEX5 [6] $end
$var wire 1 P HEX5 [5] $end
$var wire 1 Q HEX5 [4] $end
$var wire 1 R HEX5 [3] $end
$var wire 1 S HEX5 [2] $end
$var wire 1 T HEX5 [1] $end
$var wire 1 U HEX5 [0] $end
$var wire 1 V KEY [3] $end
$var wire 1 W KEY [2] $end
$var wire 1 X KEY [1] $end
$var wire 1 Y KEY [0] $end
$var wire 1 Z LEDR [9] $end
$var wire 1 [ LEDR [8] $end
$var wire 1 \ LEDR [7] $end
$var wire 1 ] LEDR [6] $end
$var wire 1 ^ LEDR [5] $end
$var wire 1 _ LEDR [4] $end
$var wire 1 ` LEDR [3] $end
$var wire 1 a LEDR [2] $end
$var wire 1 b LEDR [1] $end
$var wire 1 c LEDR [0] $end
$var wire 1 d RAM_Saida [7] $end
$var wire 1 e RAM_Saida [6] $end
$var wire 1 f RAM_Saida [5] $end
$var wire 1 g RAM_Saida [4] $end
$var wire 1 h RAM_Saida [3] $end
$var wire 1 i RAM_Saida [2] $end
$var wire 1 j RAM_Saida [1] $end
$var wire 1 k RAM_Saida [0] $end
$var wire 1 l ROM_Saida [12] $end
$var wire 1 m ROM_Saida [11] $end
$var wire 1 n ROM_Saida [10] $end
$var wire 1 o ROM_Saida [9] $end
$var wire 1 p ROM_Saida [8] $end
$var wire 1 q ROM_Saida [7] $end
$var wire 1 r ROM_Saida [6] $end
$var wire 1 s ROM_Saida [5] $end
$var wire 1 t ROM_Saida [4] $end
$var wire 1 u ROM_Saida [3] $end
$var wire 1 v ROM_Saida [2] $end
$var wire 1 w ROM_Saida [1] $end
$var wire 1 x ROM_Saida [0] $end
$var wire 1 y SW [9] $end
$var wire 1 z SW [8] $end
$var wire 1 { SW [7] $end
$var wire 1 | SW [6] $end
$var wire 1 } SW [5] $end
$var wire 1 ~ SW [4] $end
$var wire 1 !! SW [3] $end
$var wire 1 "! SW [2] $end
$var wire 1 #! SW [1] $end
$var wire 1 $! SW [0] $end

$scope module i1 $end
$var wire 1 %! gnd $end
$var wire 1 &! vcc $end
$var wire 1 '! unknown $end
$var wire 1 (! devoe $end
$var wire 1 )! devclrn $end
$var wire 1 *! devpor $end
$var wire 1 +! ww_devoe $end
$var wire 1 ,! ww_devclrn $end
$var wire 1 -! ww_devpor $end
$var wire 1 .! ww_CLOCK_50 $end
$var wire 1 /! ww_SW [9] $end
$var wire 1 0! ww_SW [8] $end
$var wire 1 1! ww_SW [7] $end
$var wire 1 2! ww_SW [6] $end
$var wire 1 3! ww_SW [5] $end
$var wire 1 4! ww_SW [4] $end
$var wire 1 5! ww_SW [3] $end
$var wire 1 6! ww_SW [2] $end
$var wire 1 7! ww_SW [1] $end
$var wire 1 8! ww_SW [0] $end
$var wire 1 9! ww_KEY [3] $end
$var wire 1 :! ww_KEY [2] $end
$var wire 1 ;! ww_KEY [1] $end
$var wire 1 <! ww_KEY [0] $end
$var wire 1 =! ww_LEDR [9] $end
$var wire 1 >! ww_LEDR [8] $end
$var wire 1 ?! ww_LEDR [7] $end
$var wire 1 @! ww_LEDR [6] $end
$var wire 1 A! ww_LEDR [5] $end
$var wire 1 B! ww_LEDR [4] $end
$var wire 1 C! ww_LEDR [3] $end
$var wire 1 D! ww_LEDR [2] $end
$var wire 1 E! ww_LEDR [1] $end
$var wire 1 F! ww_LEDR [0] $end
$var wire 1 G! ww_FPGA_RST $end
$var wire 1 H! ww_ROM_Saida [12] $end
$var wire 1 I! ww_ROM_Saida [11] $end
$var wire 1 J! ww_ROM_Saida [10] $end
$var wire 1 K! ww_ROM_Saida [9] $end
$var wire 1 L! ww_ROM_Saida [8] $end
$var wire 1 M! ww_ROM_Saida [7] $end
$var wire 1 N! ww_ROM_Saida [6] $end
$var wire 1 O! ww_ROM_Saida [5] $end
$var wire 1 P! ww_ROM_Saida [4] $end
$var wire 1 Q! ww_ROM_Saida [3] $end
$var wire 1 R! ww_ROM_Saida [2] $end
$var wire 1 S! ww_ROM_Saida [1] $end
$var wire 1 T! ww_ROM_Saida [0] $end
$var wire 1 U! ww_RAM_Saida [7] $end
$var wire 1 V! ww_RAM_Saida [6] $end
$var wire 1 W! ww_RAM_Saida [5] $end
$var wire 1 X! ww_RAM_Saida [4] $end
$var wire 1 Y! ww_RAM_Saida [3] $end
$var wire 1 Z! ww_RAM_Saida [2] $end
$var wire 1 [! ww_RAM_Saida [1] $end
$var wire 1 \! ww_RAM_Saida [0] $end
$var wire 1 ]! ww_Address [8] $end
$var wire 1 ^! ww_Address [7] $end
$var wire 1 _! ww_Address [6] $end
$var wire 1 `! ww_Address [5] $end
$var wire 1 a! ww_Address [4] $end
$var wire 1 b! ww_Address [3] $end
$var wire 1 c! ww_Address [2] $end
$var wire 1 d! ww_Address [1] $end
$var wire 1 e! ww_Address [0] $end
$var wire 1 f! ww_HEX0 [6] $end
$var wire 1 g! ww_HEX0 [5] $end
$var wire 1 h! ww_HEX0 [4] $end
$var wire 1 i! ww_HEX0 [3] $end
$var wire 1 j! ww_HEX0 [2] $end
$var wire 1 k! ww_HEX0 [1] $end
$var wire 1 l! ww_HEX0 [0] $end
$var wire 1 m! ww_HEX1 [6] $end
$var wire 1 n! ww_HEX1 [5] $end
$var wire 1 o! ww_HEX1 [4] $end
$var wire 1 p! ww_HEX1 [3] $end
$var wire 1 q! ww_HEX1 [2] $end
$var wire 1 r! ww_HEX1 [1] $end
$var wire 1 s! ww_HEX1 [0] $end
$var wire 1 t! ww_HEX2 [6] $end
$var wire 1 u! ww_HEX2 [5] $end
$var wire 1 v! ww_HEX2 [4] $end
$var wire 1 w! ww_HEX2 [3] $end
$var wire 1 x! ww_HEX2 [2] $end
$var wire 1 y! ww_HEX2 [1] $end
$var wire 1 z! ww_HEX2 [0] $end
$var wire 1 {! ww_HEX3 [6] $end
$var wire 1 |! ww_HEX3 [5] $end
$var wire 1 }! ww_HEX3 [4] $end
$var wire 1 ~! ww_HEX3 [3] $end
$var wire 1 !" ww_HEX3 [2] $end
$var wire 1 "" ww_HEX3 [1] $end
$var wire 1 #" ww_HEX3 [0] $end
$var wire 1 $" ww_HEX4 [6] $end
$var wire 1 %" ww_HEX4 [5] $end
$var wire 1 &" ww_HEX4 [4] $end
$var wire 1 '" ww_HEX4 [3] $end
$var wire 1 (" ww_HEX4 [2] $end
$var wire 1 )" ww_HEX4 [1] $end
$var wire 1 *" ww_HEX4 [0] $end
$var wire 1 +" ww_HEX5 [6] $end
$var wire 1 ," ww_HEX5 [5] $end
$var wire 1 -" ww_HEX5 [4] $end
$var wire 1 ." ww_HEX5 [3] $end
$var wire 1 /" ww_HEX5 [2] $end
$var wire 1 0" ww_HEX5 [1] $end
$var wire 1 1" ww_HEX5 [0] $end
$var wire 1 2" \CLOCK_50~input_o\ $end
$var wire 1 3" \SW[0]~input_o\ $end
$var wire 1 4" \SW[1]~input_o\ $end
$var wire 1 5" \SW[2]~input_o\ $end
$var wire 1 6" \SW[3]~input_o\ $end
$var wire 1 7" \SW[4]~input_o\ $end
$var wire 1 8" \SW[5]~input_o\ $end
$var wire 1 9" \SW[6]~input_o\ $end
$var wire 1 :" \SW[7]~input_o\ $end
$var wire 1 ;" \SW[8]~input_o\ $end
$var wire 1 <" \SW[9]~input_o\ $end
$var wire 1 =" \KEY[1]~input_o\ $end
$var wire 1 >" \KEY[2]~input_o\ $end
$var wire 1 ?" \KEY[3]~input_o\ $end
$var wire 1 @" \FPGA_RST~input_o\ $end
$var wire 1 A" \KEY[0]~input_o\ $end
$var wire 1 B" \CPU|somaUm|Add0~1_sumout\ $end
$var wire 1 C" \ROM|memROM~0_combout\ $end
$var wire 1 D" \CPU|somaUm|Add0~18\ $end
$var wire 1 E" \CPU|somaUm|Add0~21_sumout\ $end
$var wire 1 F" \ROM|memROM~7_combout\ $end
$var wire 1 G" \ROM|memROM~10_combout\ $end
$var wire 1 H" \ROM|memROM~11_combout\ $end
$var wire 1 I" \ROM|memROM~12_combout\ $end
$var wire 1 J" \ROM|memROM~14_combout\ $end
$var wire 1 K" \ROM|memROM~8_combout\ $end
$var wire 1 L" \CPU|Decoder|output[5]~3_combout\ $end
$var wire 1 M" \ROM|memROM~9_combout\ $end
$var wire 1 N" \CPU|Decoder|output[1]~0_combout\ $end
$var wire 1 O" \RAM|dado_out~8_combout\ $end
$var wire 1 P" \CPU|Decoder|output[5]~2_combout\ $end
$var wire 1 Q" \CPU|MUX2x1|saida_MUX[4]~5_combout\ $end
$var wire 1 R" \CPU|Decoder|Equal3~0_combout\ $end
$var wire 1 S" \CPU|Decoder|output[4]~1_combout\ $end
$var wire 1 T" \RAM|ram~545_combout\ $end
$var wire 1 U" \RAM|ram~27_q\ $end
$var wire 1 V" \CPU|Decoder|Equal3~1_combout\ $end
$var wire 1 W" \RAM|ram~537_combout\ $end
$var wire 1 X" \RAM|ram~538_combout\ $end
$var wire 1 Y" \RAM|dado_out[4]~9_combout\ $end
$var wire 1 Z" \CPU|MUX2x1|saida_MUX[3]~4_combout\ $end
$var wire 1 [" \ROM|memROM~5_combout\ $end
$var wire 1 \" \ROM|memROM~6_combout\ $end
$var wire 1 ]" \RAM|ram~534_combout\ $end
$var wire 1 ^" \CPU|MUX2x1|saida_MUX[2]~3_combout\ $end
$var wire 1 _" \ROM|memROM~17_combout\ $end
$var wire 1 `" \ROM|memROM~3_combout\ $end
$var wire 1 a" \ROM|memROM~4_combout\ $end
$var wire 1 b" \RAM|ram~532_combout\ $end
$var wire 1 c" \CPU|MUX2x1|saida_MUX[1]~2_combout\ $end
$var wire 1 d" \ROM|memROM~16_combout\ $end
$var wire 1 e" \CPU|MUX2x1|saida_MUX[0]~1_combout\ $end
$var wire 1 f" \ROM|memROM~15_combout\ $end
$var wire 1 g" \CPU|ULA1|Add1~34_cout\ $end
$var wire 1 h" \CPU|ULA1|Add1~17_sumout\ $end
$var wire 1 i" \RAM|ram~23_q\ $end
$var wire 1 j" \RAM|ram~529_combout\ $end
$var wire 1 k" \RAM|dado_out[0]~12_combout\ $end
$var wire 1 l" \CPU|ULA1|Add1~18\ $end
$var wire 1 m" \CPU|ULA1|Add1~21_sumout\ $end
$var wire 1 n" \RAM|ram~24_q\ $end
$var wire 1 o" \RAM|ram~531_combout\ $end
$var wire 1 p" \RAM|dado_out[1]~13_combout\ $end
$var wire 1 q" \CPU|ULA1|Add1~22\ $end
$var wire 1 r" \CPU|ULA1|Add1~25_sumout\ $end
$var wire 1 s" \RAM|ram~25_q\ $end
$var wire 1 t" \RAM|ram~533_combout\ $end
$var wire 1 u" \RAM|dado_out[2]~14_combout\ $end
$var wire 1 v" \CPU|ULA1|Add1~26\ $end
$var wire 1 w" \CPU|ULA1|Add1~29_sumout\ $end
$var wire 1 x" \RAM|ram~26_q\ $end
$var wire 1 y" \RAM|ram~535_combout\ $end
$var wire 1 z" \RAM|ram~536_combout\ $end
$var wire 1 {" \RAM|dado_out[3]~15_combout\ $end
$var wire 1 |" \CPU|ULA1|Add1~30\ $end
$var wire 1 }" \CPU|ULA1|Add1~1_sumout\ $end
$var wire 1 ~" \RAM|ram~28_q\ $end
$var wire 1 !# \RAM|ram~539_combout\ $end
$var wire 1 "# \RAM|ram~540_combout\ $end
$var wire 1 ## \CPU|MUX2x1|saida_MUX[5]~0_combout\ $end
$var wire 1 $# \CPU|ULA1|Add1~2\ $end
$var wire 1 %# \CPU|ULA1|Add1~5_sumout\ $end
$var wire 1 &# \CPU|MUX2x1|saida_MUX[6]~6_combout\ $end
$var wire 1 '# \RAM|ram~29_q\ $end
$var wire 1 (# \RAM|ram~541_combout\ $end
$var wire 1 )# \RAM|ram~542_combout\ $end
$var wire 1 *# \RAM|dado_out[6]~10_combout\ $end
$var wire 1 +# \CPU|ULA1|Add1~6\ $end
$var wire 1 ,# \CPU|ULA1|Add1~9_sumout\ $end
$var wire 1 -# \CPU|MUX2x1|saida_MUX[7]~7_combout\ $end
$var wire 1 .# \RAM|ram~30_q\ $end
$var wire 1 /# \RAM|ram~543_combout\ $end
$var wire 1 0# \RAM|ram~544_combout\ $end
$var wire 1 1# \RAM|dado_out[7]~11_combout\ $end
$var wire 1 2# \CPU|ULA1|Add1~10\ $end
$var wire 1 3# \CPU|ULA1|Add1~13_sumout\ $end
$var wire 1 4# \CPU|FLAG|DOUT~1_combout\ $end
$var wire 1 5# \CPU|FLAG|DOUT~2_combout\ $end
$var wire 1 6# \CPU|FLAG|DOUT~0_combout\ $end
$var wire 1 7# \CPU|FLAG|DOUT~q\ $end
$var wire 1 8# \CPU|LogicaDesvio|output~0_combout\ $end
$var wire 1 9# \CPU|somaUm|Add0~22\ $end
$var wire 1 :# \CPU|somaUm|Add0~25_sumout\ $end
$var wire 1 ;# \~GND~combout\ $end
$var wire 1 <# \CPU|somaUm|Add0~26\ $end
$var wire 1 =# \CPU|somaUm|Add0~29_sumout\ $end
$var wire 1 ># \CPU|somaUm|Add0~30\ $end
$var wire 1 ?# \CPU|somaUm|Add0~33_sumout\ $end
$var wire 1 @# \ROM|memROM~2_combout\ $end
$var wire 1 A# \CPU|somaUm|Add0~2\ $end
$var wire 1 B# \CPU|somaUm|Add0~5_sumout\ $end
$var wire 1 C# \CPU|somaUm|Add0~6\ $end
$var wire 1 D# \CPU|somaUm|Add0~9_sumout\ $end
$var wire 1 E# \CPU|somaUm|Add0~10\ $end
$var wire 1 F# \CPU|somaUm|Add0~13_sumout\ $end
$var wire 1 G# \CPU|somaUm|Add0~14\ $end
$var wire 1 H# \CPU|somaUm|Add0~17_sumout\ $end
$var wire 1 I# \ROM|memROM~1_combout\ $end
$var wire 1 J# \ROM|memROM~13_combout\ $end
$var wire 1 K# \RAM|ram~527_combout\ $end
$var wire 1 L# \RAM|ram~528_combout\ $end
$var wire 1 M# \RAM|ram~530_combout\ $end
$var wire 1 N# \CPU|REG1|DOUT\ [7] $end
$var wire 1 O# \CPU|REG1|DOUT\ [6] $end
$var wire 1 P# \CPU|REG1|DOUT\ [5] $end
$var wire 1 Q# \CPU|REG1|DOUT\ [4] $end
$var wire 1 R# \CPU|REG1|DOUT\ [3] $end
$var wire 1 S# \CPU|REG1|DOUT\ [2] $end
$var wire 1 T# \CPU|REG1|DOUT\ [1] $end
$var wire 1 U# \CPU|REG1|DOUT\ [0] $end
$var wire 1 V# \CPU|PC|DOUT\ [8] $end
$var wire 1 W# \CPU|PC|DOUT\ [7] $end
$var wire 1 X# \CPU|PC|DOUT\ [6] $end
$var wire 1 Y# \CPU|PC|DOUT\ [5] $end
$var wire 1 Z# \CPU|PC|DOUT\ [4] $end
$var wire 1 [# \CPU|PC|DOUT\ [3] $end
$var wire 1 \# \CPU|PC|DOUT\ [2] $end
$var wire 1 ]# \CPU|PC|DOUT\ [1] $end
$var wire 1 ^# \CPU|PC|DOUT\ [0] $end
$var wire 1 _# \CPU|PC|ALT_INV_DOUT\ [8] $end
$var wire 1 `# \CPU|PC|ALT_INV_DOUT\ [7] $end
$var wire 1 a# \CPU|PC|ALT_INV_DOUT\ [6] $end
$var wire 1 b# \CPU|PC|ALT_INV_DOUT\ [5] $end
$var wire 1 c# \CPU|PC|ALT_INV_DOUT\ [4] $end
$var wire 1 d# \CPU|PC|ALT_INV_DOUT\ [3] $end
$var wire 1 e# \CPU|PC|ALT_INV_DOUT\ [2] $end
$var wire 1 f# \CPU|PC|ALT_INV_DOUT\ [1] $end
$var wire 1 g# \CPU|PC|ALT_INV_DOUT\ [0] $end
$var wire 1 h# \CPU|FLAG|ALT_INV_DOUT~2_combout\ $end
$var wire 1 i# \CPU|FLAG|ALT_INV_DOUT~1_combout\ $end
$var wire 1 j# \RAM|ALT_INV_dado_out[3]~15_combout\ $end
$var wire 1 k# \ROM|ALT_INV_memROM~17_combout\ $end
$var wire 1 l# \RAM|ALT_INV_dado_out[2]~14_combout\ $end
$var wire 1 m# \ROM|ALT_INV_memROM~16_combout\ $end
$var wire 1 n# \RAM|ALT_INV_dado_out[1]~13_combout\ $end
$var wire 1 o# \ROM|ALT_INV_memROM~15_combout\ $end
$var wire 1 p# \RAM|ALT_INV_dado_out[0]~12_combout\ $end
$var wire 1 q# \RAM|ALT_INV_dado_out[7]~11_combout\ $end
$var wire 1 r# \RAM|ALT_INV_dado_out[6]~10_combout\ $end
$var wire 1 s# \CPU|MUX2x1|ALT_INV_saida_MUX[5]~0_combout\ $end
$var wire 1 t# \RAM|ALT_INV_dado_out[4]~9_combout\ $end
$var wire 1 u# \CPU|Decoder|ALT_INV_output[5]~3_combout\ $end
$var wire 1 v# \ROM|ALT_INV_memROM~14_combout\ $end
$var wire 1 w# \RAM|ALT_INV_ram~544_combout\ $end
$var wire 1 x# \RAM|ALT_INV_ram~543_combout\ $end
$var wire 1 y# \RAM|ALT_INV_ram~30_q\ $end
$var wire 1 z# \RAM|ALT_INV_ram~542_combout\ $end
$var wire 1 {# \RAM|ALT_INV_ram~541_combout\ $end
$var wire 1 |# \RAM|ALT_INV_ram~29_q\ $end
$var wire 1 }# \RAM|ALT_INV_ram~540_combout\ $end
$var wire 1 ~# \RAM|ALT_INV_ram~539_combout\ $end
$var wire 1 !$ \RAM|ALT_INV_ram~28_q\ $end
$var wire 1 "$ \RAM|ALT_INV_ram~538_combout\ $end
$var wire 1 #$ \RAM|ALT_INV_ram~537_combout\ $end
$var wire 1 $$ \RAM|ALT_INV_ram~27_q\ $end
$var wire 1 %$ \RAM|ALT_INV_ram~536_combout\ $end
$var wire 1 &$ \RAM|ALT_INV_ram~535_combout\ $end
$var wire 1 '$ \RAM|ALT_INV_ram~26_q\ $end
$var wire 1 ($ \RAM|ALT_INV_ram~534_combout\ $end
$var wire 1 )$ \RAM|ALT_INV_ram~533_combout\ $end
$var wire 1 *$ \RAM|ALT_INV_ram~25_q\ $end
$var wire 1 +$ \RAM|ALT_INV_ram~532_combout\ $end
$var wire 1 ,$ \RAM|ALT_INV_ram~531_combout\ $end
$var wire 1 -$ \RAM|ALT_INV_ram~24_q\ $end
$var wire 1 .$ \RAM|ALT_INV_dado_out~8_combout\ $end
$var wire 1 /$ \RAM|ALT_INV_ram~530_combout\ $end
$var wire 1 0$ \CPU|Decoder|ALT_INV_output[5]~2_combout\ $end
$var wire 1 1$ \CPU|Decoder|ALT_INV_output[4]~1_combout\ $end
$var wire 1 2$ \RAM|ALT_INV_ram~529_combout\ $end
$var wire 1 3$ \RAM|ALT_INV_ram~23_q\ $end
$var wire 1 4$ \RAM|ALT_INV_ram~528_combout\ $end
$var wire 1 5$ \RAM|ALT_INV_ram~527_combout\ $end
$var wire 1 6$ \CPU|Decoder|ALT_INV_Equal3~1_combout\ $end
$var wire 1 7$ \CPU|Decoder|ALT_INV_output[1]~0_combout\ $end
$var wire 1 8$ \CPU|Decoder|ALT_INV_Equal3~0_combout\ $end
$var wire 1 9$ \CPU|FLAG|ALT_INV_DOUT~q\ $end
$var wire 1 :$ \ROM|ALT_INV_memROM~13_combout\ $end
$var wire 1 ;$ \ROM|ALT_INV_memROM~12_combout\ $end
$var wire 1 <$ \ROM|ALT_INV_memROM~11_combout\ $end
$var wire 1 =$ \ROM|ALT_INV_memROM~10_combout\ $end
$var wire 1 >$ \ROM|ALT_INV_memROM~9_combout\ $end
$var wire 1 ?$ \ROM|ALT_INV_memROM~8_combout\ $end
$var wire 1 @$ \ROM|ALT_INV_memROM~7_combout\ $end
$var wire 1 A$ \ROM|ALT_INV_memROM~6_combout\ $end
$var wire 1 B$ \ROM|ALT_INV_memROM~5_combout\ $end
$var wire 1 C$ \ROM|ALT_INV_memROM~4_combout\ $end
$var wire 1 D$ \ROM|ALT_INV_memROM~3_combout\ $end
$var wire 1 E$ \ROM|ALT_INV_memROM~2_combout\ $end
$var wire 1 F$ \ROM|ALT_INV_memROM~1_combout\ $end
$var wire 1 G$ \ROM|ALT_INV_memROM~0_combout\ $end
$var wire 1 H$ \CPU|REG1|ALT_INV_DOUT\ [7] $end
$var wire 1 I$ \CPU|REG1|ALT_INV_DOUT\ [6] $end
$var wire 1 J$ \CPU|REG1|ALT_INV_DOUT\ [5] $end
$var wire 1 K$ \CPU|REG1|ALT_INV_DOUT\ [4] $end
$var wire 1 L$ \CPU|REG1|ALT_INV_DOUT\ [3] $end
$var wire 1 M$ \CPU|REG1|ALT_INV_DOUT\ [2] $end
$var wire 1 N$ \CPU|REG1|ALT_INV_DOUT\ [1] $end
$var wire 1 O$ \CPU|REG1|ALT_INV_DOUT\ [0] $end
$var wire 1 P$ \CPU|ULA1|ALT_INV_Add1~29_sumout\ $end
$var wire 1 Q$ \CPU|ULA1|ALT_INV_Add1~25_sumout\ $end
$var wire 1 R$ \CPU|ULA1|ALT_INV_Add1~21_sumout\ $end
$var wire 1 S$ \CPU|ULA1|ALT_INV_Add1~17_sumout\ $end
$var wire 1 T$ \CPU|ULA1|ALT_INV_Add1~13_sumout\ $end
$var wire 1 U$ \CPU|ULA1|ALT_INV_Add1~9_sumout\ $end
$var wire 1 V$ \CPU|ULA1|ALT_INV_Add1~5_sumout\ $end
$var wire 1 W$ \CPU|ULA1|ALT_INV_Add1~1_sumout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0*
0+
1:
0;
0<
0=
0>
0?
0@
1A
0B
0C
0D
0E
0F
0G
1H
0I
0J
0K
0L
0M
0N
1O
0P
0Q
0R
0S
0T
0U
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
zd
ze
zf
zg
zh
zi
zj
zk
0l
1m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
1x
0%!
1&!
x'!
1(!
1)!
1*!
1+!
1,!
1-!
0.!
0G!
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
1B"
1C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
1R"
1S"
0T"
0U"
0V"
0W"
0X"
1Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
1e"
0f"
1g"
1h"
0i"
0j"
1k"
0l"
1m"
0n"
0o"
1p"
0q"
1r"
0s"
0t"
1u"
0v"
1w"
0x"
0y"
0z"
1{"
0|"
1}"
0~"
0!#
0"#
0##
0$#
1%#
0&#
0'#
0(#
0)#
1*#
0+#
1,#
0-#
0.#
0/#
00#
11#
02#
13#
14#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
1@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
1I#
0J#
0K#
0L#
0M#
1h#
0i#
0j#
1k#
0l#
1m#
0n#
1o#
0p#
0q#
0r#
1s#
0t#
1u#
1v#
1w#
1x#
1y#
1z#
1{#
1|#
1}#
1~#
1!$
1"$
1#$
1$$
1%$
1&$
1'$
1($
1)$
1*$
1+$
1,$
1-$
1.$
1/$
10$
01$
12$
13$
14$
15$
16$
17$
08$
19$
1:$
1;$
1<$
1=$
1>$
1?$
1@$
1A$
1B$
1C$
1D$
0E$
0F$
0G$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0V
0W
0X
0Y
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0H!
1I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
1T!
zU!
zV!
zW!
zX!
zY!
zZ!
z[!
z\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
1f!
0g!
0h!
0i!
0j!
0k!
0l!
1m!
0n!
0o!
0p!
0q!
0r!
0s!
1t!
0u!
0v!
0w!
0x!
0y!
0z!
1{!
0|!
0}!
0~!
0!"
0""
0#"
1$"
0%"
0&"
0'"
0("
0)"
0*"
1+"
0,"
0-"
0."
0/"
00"
01"
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
1_#
1`#
1a#
1b#
1c#
1d#
1e#
1f#
1g#
1H$
1I$
1J$
1K$
1L$
1M$
1N$
1O$
0!
0"
0#
0$
0%
0&
0'
0(
0)
1,
0-
0.
0/
00
01
02
13
04
05
06
07
08
09
$end
#10000
1*
1.!
12"
#20000
0*
0.!
02"
#30000
1*
1.!
12"
#40000
0*
0.!
02"
#50000
1*
1.!
12"
#60000
0*
0.!
02"
#70000
1*
1.!
12"
#80000
0*
0.!
02"
#90000
1*
1.!
12"
#100000
0*
0.!
02"
#110000
1*
1.!
12"
#120000
0*
0.!
02"
#130000
1*
1.!
12"
#140000
0*
0.!
02"
#150000
1*
1.!
12"
#160000
0*
0.!
02"
#170000
1*
1.!
12"
#180000
0*
0.!
02"
#190000
1*
1.!
12"
#200000
0*
0.!
02"
#210000
1*
1.!
12"
#220000
0*
0.!
02"
#230000
1*
1.!
12"
#240000
0*
0.!
02"
#250000
1*
1.!
12"
#260000
0*
0.!
02"
#270000
1*
1.!
12"
#280000
0*
0.!
02"
#290000
1*
1.!
12"
#300000
0*
0.!
02"
#310000
1*
1.!
12"
#320000
0*
0.!
02"
#330000
1*
1.!
12"
#340000
0*
0.!
02"
#350000
1*
1.!
12"
#360000
0*
0.!
02"
#370000
1*
1.!
12"
#380000
0*
0.!
02"
#390000
1*
1.!
12"
#400000
0*
0.!
02"
#410000
1*
1.!
12"
#420000
0*
0.!
02"
#430000
1*
1.!
12"
#440000
0*
0.!
02"
#450000
1*
1.!
12"
#460000
0*
0.!
02"
#470000
1*
1.!
12"
#480000
0*
0.!
02"
#490000
1*
1.!
12"
#500000
0*
0.!
02"
#510000
1*
1.!
12"
#520000
0*
0.!
02"
#530000
1*
1.!
12"
#540000
0*
0.!
02"
#550000
1*
1.!
12"
#560000
0*
0.!
02"
#570000
1*
1.!
12"
#580000
0*
0.!
02"
#590000
1*
1.!
12"
#600000
0*
0.!
02"
#610000
1*
1.!
12"
#620000
0*
0.!
02"
#630000
1*
1.!
12"
#640000
0*
0.!
02"
#650000
1*
1.!
12"
#660000
0*
0.!
02"
#670000
1*
1.!
12"
#680000
0*
0.!
02"
#690000
1*
1.!
12"
#700000
0*
0.!
02"
#710000
1*
1.!
12"
#720000
0*
0.!
02"
#730000
1*
1.!
12"
#740000
0*
0.!
02"
#750000
1*
1.!
12"
#760000
0*
0.!
02"
#770000
1*
1.!
12"
#780000
0*
0.!
02"
#790000
1*
1.!
12"
#800000
0*
0.!
02"
#810000
1*
1.!
12"
#820000
0*
0.!
02"
#830000
1*
1.!
12"
#840000
0*
0.!
02"
#850000
1*
1.!
12"
#860000
0*
0.!
02"
#870000
1*
1.!
12"
#880000
0*
0.!
02"
#890000
1*
1.!
12"
#900000
0*
0.!
02"
#910000
1*
1.!
12"
#920000
0*
0.!
02"
#930000
1*
1.!
12"
#940000
0*
0.!
02"
#950000
1*
1.!
12"
#960000
0*
0.!
02"
#970000
1*
1.!
12"
#980000
0*
0.!
02"
#990000
1*
1.!
12"
#1000000
